/*
===
RESET
===
*/

@layer reset {
  *,
  *::before,
  *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    border-width: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font: inherit;
  }

  ul,
  ol,
  menu {
    list-style-type: none;
    list-style-position: outside;
  }

  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
  }

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    overflow-wrap: break-word;
  }

  a {
    color: inherit;
    text-decoration: none;
  }
}

/*
===
ROOT
===
*/

@layer root {
  :root {
    /* [--__var] is for user input. Don't apply. */
    /* [ --_var] is for calculation. Apply with care. */
    /* [  --var] is for final variables. Apply freely. */

    /*
    ==
    SET
    ==
    */

    /* * SET LAYOUT */

    /* viewport limits for dynamic scaling */
    --__vw-min: 400;
    --__vw-max: 1840;

    /* actual boundaries for content */
    --__cw-min: 240;
    --__cw-max: 960;

    /* * SET TYPOGRAPHY */

    /* font family */
    --ff: Inter, sans-serif;

    /* font feature settings */
    --ffs: "ss01", "ss04";

    /* font size */
    --__fs-p-min: 16;
    --__fs-p-max: 20;
    --__fs-h4-min: 16;
    --__fs-h4-max: 20;
    --__fs-h3-min: 20;
    --__fs-h3-max: 32;
    --__fs-h2-min: 24;
    --__fs-h2-max: 48;
    --__fs-h1-min: 32;
    --__fs-h1-max: 64;
    --__fs-l-min: 16;
    --__fs-l-max: 16;

    /* line height */
    --lh-p: 1.6;
    --lh-h4: 1.4;
    --lh-h3: 1.3;
    --lh-h2: 1.2;
    --lh-h1: 1.1;
    --lh-l: 1;

    /* font weight */
    --fw-p: 400;
    --fw-h: 700;
    --fw-l: 500;

    /* letter spacing */
    --ls-p: normal;
    --ls-h: normal;
    --ls-l: normal;

    /* line length in unitless characters */
    --__ll: 55;

    /* text wrap */
    --tw-p: pretty;
    --tw-h: balance;

    /* * SET SPACING */
    /* bleed (space between content and viewport) */
    --__bleed-min: 24;
    --__bleed-max: 48;

    /* * SET COLOR SCHEME */
    color-scheme: light dark;

    /* * SET SWATCHES (invert names for dark mode) */

    /* neutral swatches */
    --_sw-n-01: #030303;
    --_sw-n-05: #0d0d0d;
    --_sw-n-10: #1a1a1a;
    --_sw-n-15: #262626;
    --_sw-n-20: #333333;
    --_sw-n-25: #404040;
    --_sw-n-30: #4d4d4d;
    --_sw-n-35: #595959;
    --_sw-n-40: #666666;
    --_sw-n-45: #737373;
    --_sw-n-50: #808080;
    --_sw-n-55: #8c8c8c;
    --_sw-n-60: #999999;
    --_sw-n-65: #a6a6a6;
    --_sw-n-70: #b3b3b3;
    --_sw-n-75: #bfbfbf;
    --_sw-n-80: #cccccc;
    --_sw-n-85: #d9d9d9;
    --_sw-n-90: #e6e6e6;
    --_sw-n-95: #f2f2f2;
    --_sw-n-99: #fcfcfc;

    /* primary swatches */
    --_sw-p-01: #060103;
    --_sw-p-05: #1d050d;
    --_sw-p-10: #380a1a;
    --_sw-p-15: #521026;
    --_sw-p-20: #6a1733;
    --_sw-p-25: #801f40;
    --_sw-p-30: #94284d;
    --_sw-p-35: #a73259;
    --_sw-p-40: #b83c66;
    --_sw-p-45: #c74873;
    --_sw-p-50: #d55480;
    --_sw-p-55: #e1618c;
    --_sw-p-60: #eb6f99;
    --_sw-p-65: #f27ba3;
    --_sw-p-70: #f98bb0;
    --_sw-p-75: #fd98ba;
    --_sw-p-80: #ffa9c7;
    --_sw-p-85: #ffbbd4;
    --_sw-p-90: #ffd2e3;
    --_sw-p-95: #ffe6f0;
    --_sw-p-99: #fffbfc;

    /* error swatches */
    --_sw-e-01: #050201;
    --_sw-e-05: #190806;
    --_sw-e-10: #30110c;
    --_sw-e-15: #461a13;
    --_sw-e-20: #5b231b;
    --_sw-e-25: #6e2d23;
    --_sw-e-30: #80382d;
    --_sw-e-35: #924337;
    --_sw-e-40: #a14f42;
    --_sw-e-45: #b05b4d;
    --_sw-e-50: #bd675a;
    --_sw-e-55: #ca7467;
    --_sw-e-60: #d48275;
    --_sw-e-65: #de9083;
    --_sw-e-70: #e69e93;
    --_sw-e-75: #ecaaa0;
    --_sw-e-80: #f3b9b0;
    --_sw-e-85: #f7c9c2;
    --_sw-e-90: #fbd9d4;
    --_sw-e-95: #feeae7;
    --_sw-e-99: #fffbfb;

    /* warning swatches */
    --_sw-w-01: #040200;
    --_sw-w-05: #140c00;
    --_sw-w-10: #2a1b00;
    --_sw-w-15: #3c2800;
    --_sw-w-20: #4d3400;
    --_sw-w-25: #5e4100;
    --_sw-w-30: #6e4e03;
    --_sw-w-35: #7a5809;
    --_sw-w-40: #886411;
    --_sw-w-45: #96711b;
    --_sw-w-50: #a37e27;
    --_sw-w-55: #b08b34;
    --_sw-w-60: #bb9744;
    --_sw-w-65: #c6a455;
    --_sw-w-70: #d1b168;
    --_sw-w-75: #dabe7d;
    --_sw-w-80: #e3cb93;
    --_sw-w-85: #ebd8ac;
    --_sw-w-90: #f2e5c6;
    --_sw-w-95: #f9f2e1;
    --_sw-w-99: #fefcf9;

    /* info swatches */
    --_sw-i-01: #010305;
    --_sw-i-05: #050e19;
    --_sw-i-10: #0b1c31;
    --_sw-i-15: #122a48;
    --_sw-i-20: #1a385d;
    --_sw-i-25: #224571;
    --_sw-i-30: #2c5383;
    --_sw-i-35: #366095;
    --_sw-i-40: #416da5;
    --_sw-i-45: #4c7ab3;
    --_sw-i-50: #5887c1;
    --_sw-i-55: #6694cd;
    --_sw-i-60: #74a0d8;
    --_sw-i-65: #82ade1;
    --_sw-i-70: #92b9e9;
    --_sw-i-75: #a2c5f0;
    --_sw-i-80: #b0cff5;
    --_sw-i-85: #c5ddfa;
    --_sw-i-90: #d7e8fd;
    --_sw-i-95: #ebf4ff;
    --_sw-i-99: #fbfdff;

    /* success swatches */
    --_sw-s-01: #000401;
    --_sw-s-05: #021406;
    --_sw-s-10: #062a0d;
    --_sw-s-15: #0a3813;
    --_sw-s-20: #0f4a1b;
    --_sw-s-25: #165a23;
    --_sw-s-30: #1d6a2d;
    --_sw-s-35: #267a37;
    --_sw-s-40: #308842;
    --_sw-s-45: #3b964d;
    --_sw-s-50: #47a35a;
    --_sw-s-55: #55b067;
    --_sw-s-60: #63bb75;
    --_sw-s-65: #73c683;
    --_sw-s-70: #83d093;
    --_sw-s-75: #95daa3;
    --_sw-s-80: #a8e3b4;
    --_sw-s-85: #bcebc6;
    --_sw-s-90: #d1f2d8;
    --_sw-s-95: #e8f9eb;
    --_sw-s-99: #fafefb;

    /*
    ==
    GET
    ==
    */

    /* special values */
    --_uls: calc(1 / 16);
    --_rem: calc(var(--_uls) * 1rem);
    --_vw: 100vw;
    /* @supports (width: 100dvw) {
      --_vw: 100dvw;
    } */

    /* * GET LAYOUT */

    /* viewport, rem, unitless */
    --_vw-min: calc(var(--__vw-min) * var(--_uls));
    --_vw-max: calc(var(--__vw-max) * var(--_uls));

    /* viewport, rem */
    --_vw-min-rem: calc(var(--_vw-min) * 1rem);
    --_vw-max-rem: calc(var(--_vw-max) * 1rem);

    /* content, rem, unitless */
    --_cw-min: calc(var(--__cw-min) * var(--_uls));
    --_cw-max: calc(var(--__cw-max) * var(--_uls));

    /* content, rem */
    --_cw-min-rem: calc(var(--_cw-min) * 1rem);
    --_cw-max-rem: calc(var(--_cw-max) * 1rem);

    /* safe for use */
    --cw-min: var(--_cw-min-rem);
    --cw-max: var(--_cw-max-rem);
    --cw: clamp(var(--cw-min), 100%, var(--cw-max));

    /* util parametrization unit */
    --_param: calc(
      (var(--_vw) - var(--_vw-min-rem)) / (var(--_vw-max) - var(--_vw-min))
    );

    /* * GET TYPOGRAPHY */

    /* font size, rem, unitless */
    --_fs-p-min: calc(var(--__fs-p-min) * var(--_uls));
    --_fs-p-max: calc(var(--__fs-p-max) * var(--_uls));
    --_fs-h4-min: calc(var(--__fs-h4-min) * var(--_uls));
    --_fs-h4-max: calc(var(--__fs-h4-max) * var(--_uls));
    --_fs-h3-min: calc(var(--__fs-h3-min) * var(--_uls));
    --_fs-h3-max: calc(var(--__fs-h3-max) * var(--_uls));
    --_fs-h2-min: calc(var(--__fs-h2-min) * var(--_uls));
    --_fs-h2-max: calc(var(--__fs-h2-max) * var(--_uls));
    --_fs-h1-min: calc(var(--__fs-h1-min) * var(--_uls));
    --_fs-h1-max: calc(var(--__fs-h1-max) * var(--_uls));
    --_fs-l-min: calc(var(--__fs-l-min) * var(--_uls));
    --_fs-l-max: calc(var(--__fs-l-max) * var(--_uls));

    /* font size, rem */
    --_fs-p-min-rem: calc(var(--_fs-p-min) * 1rem);
    --_fs-p-max-rem: calc(var(--_fs-p-max) * 1rem);
    --_fs-h4-min-rem: calc(var(--_fs-h4-min) * 1rem);
    --_fs-h4-max-rem: calc(var(--_fs-h4-max) * 1rem);
    --_fs-h3-min-rem: calc(var(--_fs-h3-min) * 1rem);
    --_fs-h3-max-rem: calc(var(--_fs-h3-max) * 1rem);
    --_fs-h2-min-rem: calc(var(--_fs-h2-min) * 1rem);
    --_fs-h2-max-rem: calc(var(--_fs-h2-max) * 1rem);
    --_fs-h1-min-rem: calc(var(--_fs-h1-min) * 1rem);
    --_fs-h1-max-rem: calc(var(--_fs-h1-max) * 1rem);
    --_fs-l-min-rem: calc(var(--_fs-l-min) * 1rem);
    --_fs-l-max-rem: calc(var(--_fs-l-max) * 1rem);

    /* fluid font size parts */
    --_fs-p: calc(
      var(--_fs-p-min-rem) + (var(--_fs-p-max) - var(--_fs-p-min)) *
        var(--_param)
    );
    --_fs-h4: calc(
      var(--_fs-h4-min-rem) + (var(--_fs-h4-max) - var(--_fs-h4-min)) *
        var(--_param)
    );
    --_fs-h3: calc(
      var(--_fs-h3-min-rem) + (var(--_fs-h3-max) - var(--_fs-h3-min)) *
        var(--_param)
    );
    --_fs-h2: calc(
      var(--_fs-h2-min-rem) + (var(--_fs-h2-max) - var(--_fs-h2-min)) *
        var(--_param)
    );
    --_fs-h1: calc(
      var(--_fs-h1-min-rem) + (var(--_fs-h1-max) - var(--_fs-h1-min)) *
        var(--_param)
    );
    --_fs-l: calc(
      var(--_fs-l-min-rem) + (var(--_fs-l-max) - var(--_fs-l-min)) *
        var(--_param)
    );

    /* actual fluid font sizes */
    --fs-p: clamp(var(--_fs-p-min-rem), var(--_fs-p), var(--_fs-p-max-rem));
    --fs-h4: clamp(var(--_fs-h4-min-rem), var(--_fs-h4), var(--_fs-h4-max-rem));
    --fs-h3: clamp(var(--_fs-h3-min-rem), var(--_fs-h3), var(--_fs-h3-max-rem));
    --fs-h2: clamp(var(--_fs-h2-min-rem), var(--_fs-h2), var(--_fs-h2-max-rem));
    --fs-h1: clamp(var(--_fs-h1-min-rem), var(--_fs-h1), var(--_fs-h1-max-rem));
    --fs-l: clamp(var(--_fs-l-min-rem), var(--_fs-l), var(--_fs-l-max-rem));

    /* line length */
    --ll: calc(var(--fs-p) * var(--__ll) * 0.6);

    /* * GET SPACING */

    /* bleed, rem, unitless */
    --_bleed-min: calc(var(--__bleed-min) * var(--_uls));
    --_bleed-max: calc(var(--__bleed-max) * var(--_uls));

    /* bleed, rem */
    --_bleed-min-rem: calc(var(--_bleed-min) * 1rem);
    --_bleed-max-rem: calc(var(--_bleed-max) * 1rem);

    /* fluid bleed part */
    --_bleed: calc(
      var(--_bleed-min-rem) + (var(--_bleed-max) - var(--_bleed-min)) *
        var(--_param)
    );

    /* actual bleed */
    --bleed: clamp(var(--_bleed-min-rem), var(--_bleed), var(--_bleed-max-rem));

    /* * GET SIZES */

    /* font-dependent */
    --s-p: var(--fs-p);
    --s-h4: var(--fs-h4);
    --s-h3: var(--fs-h3);
    --s-h2: var(--fs-h2);
    --s-h1: var(--fs-h1);
    --s-l: var(--fs-l);

    /* static */
    --s-0: 0;
    --s-1: calc(1 * var(--_rem));
    --s-2: calc(2 * var(--_rem));
    --s-4: calc(4 * var(--_rem));
    --s-8: calc(8 * var(--_rem));
    --s-12: calc(12 * var(--_rem));
    --s-16: calc(16 * var(--_rem));
    --s-20: calc(20 * var(--_rem));
    --s-24: calc(24 * var(--_rem));
    --s-32: calc(32 * var(--_rem));
    --s-48: calc(48 * var(--_rem));
    --s-64: calc(64 * var(--_rem));
    --s-80: calc(80 * var(--_rem));
    --s-96: calc(96 * var(--_rem));
    --s-128: calc(128 * var(--_rem));
    --s-160: calc(160 * var(--_rem));
    --s-192: calc(192 * var(--_rem));
    --s-256: calc(256 * var(--_rem));

    /* dynamic */
    --s-1-2: clamp(
      0.0625rem,
      calc(0.0625rem + 0.0625 * var(--_param)),
      0.125rem
    );
    --s-2-4: clamp(0.125rem, calc(0.125rem + 0.125 * var(--_param)), 0.25rem);
    --s-4-8: clamp(0.25rem, calc(0.25rem + 0.25 * var(--_param)), 0.5rem);
    --s-4-12: clamp(0.25rem, calc(0.25rem + 0.5 * var(--_param)), 0.75rem);
    --s-4-16: clamp(0.25rem, calc(0.25rem + 0.75 * var(--_param)), 1rem);
    --s-8-16: clamp(0.5rem, calc(0.5rem + 0.5 * var(--_param)), 1rem);
    --s-8-24: clamp(0.5rem, calc(0.5rem + 1 * var(--_param)), 1.5rem);
    --s-8-32: clamp(0.5rem, calc(0.5rem + 1.5 * var(--_param)), 2rem);
    --s-16-24: clamp(1rem, calc(1rem + 0.5 * var(--_param)), 1.5rem);
    --s-16-32: clamp(1rem, calc(1rem + 1 * var(--_param)), 2rem);
    --s-16-48: clamp(1rem, calc(1rem + 2 * var(--_param)), 3rem);
    --s-24-32: clamp(1.5rem, calc(1.5rem + 0.5 * var(--_param)), 2rem);
    --s-24-48: clamp(1.5rem, calc(1.5rem + 1.5 * var(--_param)), 3rem);
    --s-24-64: clamp(1.5rem, calc(1.5rem + 2.5 * var(--_param)), 4rem);
    --s-32-48: clamp(2rem, calc(2rem + 1 * var(--_param)), 3rem);
    --s-32-64: clamp(2rem, calc(2rem + 2 * var(--_param)), 4rem);
    --s-32-96: clamp(2rem, calc(2rem + 4 * var(--_param)), 6rem);
    --s-48-64: clamp(3rem, calc(3rem + 1 * var(--_param)), 4rem);
    --s-48-96: clamp(3rem, calc(3rem + 3 * var(--_param)), 6rem);
    --s-48-128: clamp(3rem, calc(3rem + 5 * var(--_param)), 8rem);
    --s-64-96: clamp(4rem, calc(4rem + 2 * var(--_param)), 6rem);
    --s-64-128: clamp(4rem, calc(4rem + 4 * var(--_param)), 8rem);
    --s-64-192: clamp(4rem, calc(4rem + 8 * var(--_param)), 12rem);
    --s-96-128: clamp(6rem, calc(6rem + 2 * var(--_param)), 8rem);
    --s-96-192: clamp(6rem, calc(6rem + 6 * var(--_param)), 12rem);
    --s-96-256: clamp(6rem, calc(6rem + 10 * var(--_param)), 16rem);

    /* * GET COLOR SCHEME */

    &[data-theme="light"] {
      color-scheme: light;
    }

    &[data-theme="dark"] {
      color-scheme: dark;
    }

    /* * GET COLORS */

    /* common */
    --c-background: light-dark(var(--_sw-n-90), var(--_sw-n-05));
    --c-area-disabled: light-dark(var(--_sw-n-90), var(--_sw-n-05));
    --c-border-disabled: light-dark(var(--_sw-n-80), var(--_sw-n-15));
    --c-text-disabled: light-dark(var(--_sw-n-40), var(--_sw-n-60));

    /* neutral */
    --c-area-neutral: light-dark(var(--_sw-n-99), var(--_sw-n-20));
    --c-area-neutral-hover: light-dark(var(--_sw-n-95), var(--_sw-n-15));
    --c-area-neutral-active: light-dark(var(--_sw-n-85), var(--_sw-n-10));
    --c-border-neutral: light-dark(var(--_sw-n-60), var(--_sw-n-30));
    --c-shadow-neutral: light-dark(var(--_sw-n-75), var(--_sw-n-01));
    --c-text-neutral: light-dark(var(--_sw-n-10), var(--_sw-n-90));
    --c-label-neutral: light-dark(var(--_sw-n-20), var(--_sw-n-80));

    /* tone */
    --c-area-tone: light-dark(var(--_sw-p-99), var(--_sw-p-20));
    --c-area-tone-hover: light-dark(var(--_sw-p-95), var(--_sw-p-15));
    --c-area-tone-active: light-dark(var(--_sw-p-85), var(--_sw-p-10));
    --c-border-tone: light-dark(var(--_sw-p-60), var(--_sw-p-30));
    --c-shadow-tone: light-dark(var(--_sw-p-75), var(--_sw-p-01));
    --c-text-tone: light-dark(var(--_sw-p-10), var(--_sw-p-90));
    --c-label-tone: light-dark(var(--_sw-p-20), var(--_sw-p-80));

    /* accent */
    --c-area-accent: light-dark(var(--_sw-p-30), var(--_sw-p-70));
    --c-area-accent-hover: light-dark(var(--_sw-p-25), var(--_sw-p-65));
    --c-area-accent-active: light-dark(var(--_sw-p-20), var(--_sw-p-60));
    --c-border-accent: light-dark(var(--_sw-p-40), var(--_sw-p-60));
    --c-shadow-accent: light-dark(var(--_sw-p-10), var(--_sw-p-20));
    --c-text-accent: light-dark(var(--_sw-p-95), var(--_sw-p-05));
    --c-label-accent: light-dark(var(--_sw-p-90), var(--_sw-p-10));

    /* error */
    --c-area-error: light-dark(var(--_sw-e-99), var(--_sw-e-20));
    --c-area-error-hover: light-dark(var(--_sw-e-95), var(--_sw-e-15));
    --c-area-error-active: light-dark(var(--_sw-e-85), var(--_sw-e-10));
    --c-border-error: light-dark(var(--_sw-e-60), var(--_sw-e-30));
    --c-shadow-error: light-dark(var(--_sw-e-75), var(--_sw-e-01));
    --c-text-error: light-dark(var(--_sw-e-10), var(--_sw-e-90));
    --c-label-error: light-dark(var(--_sw-e-20), var(--_sw-e-80));

    /* warning */
    --c-area-warning: light-dark(var(--_sw-w-99), var(--_sw-w-20));
    --c-area-warning-hover: light-dark(var(--_sw-w-95), var(--_sw-w-15));
    --c-area-warning-active: light-dark(var(--_sw-w-85), var(--_sw-w-10));
    --c-border-warning: light-dark(var(--_sw-w-60), var(--_sw-w-30));
    --c-shadow-warning: light-dark(var(--_sw-w-75), var(--_sw-w-01));
    --c-text-warning: light-dark(var(--_sw-w-10), var(--_sw-w-90));
    --c-label-warning: light-dark(var(--_sw-w-20), var(--_sw-w-80));

    /* info */
    --c-area-info: light-dark(var(--_sw-i-99), var(--_sw-i-20));
    --c-area-info-hover: light-dark(var(--_sw-i-95), var(--_sw-i-15));
    --c-area-info-active: light-dark(var(--_sw-i-85), var(--_sw-i-10));
    --c-border-info: light-dark(var(--_sw-i-60), var(--_sw-i-30));
    --c-shadow-info: light-dark(var(--_sw-i-75), var(--_sw-i-01));
    --c-text-info: light-dark(var(--_sw-i-10), var(--_sw-i-90));
    --c-label-info: light-dark(var(--_sw-i-20), var(--_sw-i-80));

    /* success */
    --c-area-success: light-dark(var(--_sw-s-99), var(--_sw-s-20));
    --c-area-success-hover: light-dark(var(--_sw-s-95), var(--_sw-s-15));
    --c-area-success-active: light-dark(var(--_sw-s-85), var(--_sw-s-10));
    --c-border-success: light-dark(var(--_sw-s-60), var(--_sw-s-30));
    --c-shadow-success: light-dark(var(--_sw-s-75), var(--_sw-s-01));
    --c-text-success: light-dark(var(--_sw-s-10), var(--_sw-s-90));
    --c-label-success: light-dark(var(--_sw-s-20), var(--_sw-s-80));

    /* * GET MISC */

    /* transitions */
    --dur-switch: 1;
    --dur-0_1: calc(0.1s * var(--dur-switch));
    --dur-0_2: calc(0.2s * var(--dur-switch));
    --dur-0_3: calc(0.3s * var(--dur-switch));
    --dur-0_4: calc(0.4s * var(--dur-switch));
    --dur-0_5: calc(0.5s * var(--dur-switch));
    --dur-0_6: calc(0.6s * var(--dur-switch));
    --dur-0_7: calc(0.7s * var(--dur-switch));
    --dur-0_8: calc(0.8s * var(--dur-switch));
    --dur-0_9: calc(0.9s * var(--dur-switch));
    --dur-1_0: calc(1s * var(--dur-switch));

    /* shadow coordinates */
    --sh-coords-rest: 0 var(--s-2-4) 0;
    --sh-coords-hover: 0 var(--s-1-2) 0;
    --sh-coords-active: 0 var(--s-0) 0;
    /* compensation */
    --transform-hover: translateY(var(--s-1));
    --transform-active: translateY(var(--s-2));

    /* border width */
    --bw-normal: var(--s-2);
    --bw-subtle: var(--s-1);
    --bw-disabled: var(--s-1);

    /* border radius */
    --br-normal: var(--s-8);
    --br-subtle: var(--s-4);

    /* border style */
    --bs-normal: solid;
    --bs-subtle: dashed;
    --bs-disabled: solid;
  }
}

/*
===
PAGE
===
*/

@layer page {
  html {
    height: 100%;
    scrollbar-gutter: stable;
    -webkit-text-size-adjust: 100%;
    text-rendering: optimizeLegibility;
    scroll-behavior: smooth;
    accent-color: var(--c-border-accent);
  }

  body {
    /* layout */
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    gap: var(--s-48-128);
    margin: 0 auto;
    padding: var(--bleed);
    /* visual */
    background-color: var(--c-background);
    color: var(--c-text-neutral);
    /* text */
    font-family: var(--ff);
    font-feature-settings: var(--ffs);
    font-weight: var(--fw-p);
    font-size: var(--fs-p);
    line-height: var(--lh-p);
    letter-spacing: var(--ls-p);
  }

  header,
  main,
  footer {
    /* layout */
    width: var(--cw);
  }

  header {
    /* layout */
    display: flex;
    flex-flow: row wrap;
    gap: var(--s-32);
    justify-content: space-between;
    align-items: start;
  }

  footer {
    /* layout */
    display: flex;
    flex-flow: column nowrap;
    gap: var(--s-64);
  }

  main {
    /* layout */
    display: flex;
    flex-flow: column nowrap;
    gap: var(--s-48-128);
  }

  section {
    /* layout */
    display: flex;
    flex-flow: column nowrap;
    gap: var(--s-16);
  }

  section section {
    padding-top: var(--s-16);
  }
}

/*
===
ATOMS
===
*/

@layer atoms {
  /* * GRAPHICS */
  @layer graphics {
    figure {
      /* layout */
      display: flex;
      flex-flow: column nowrap;
      gap: var(--s-8);
    }

    figcaption {
      /* text */
      font-size: var(--fs-l);
      line-height: var(--lh-l);
    }

    img,
    picture,
    video,
    canvas {
      width: 100%;
      /* visual */
      border-radius: var(--br-normal);
      background-color: var(--c-area-neutral-hover);
      object-fit: cover;
    }

    hr {
      /* visual */
      border: var(--bw-subtle) var(--bs-subtle) var(--c-border-neutral);
      margin: var(--s-8) 0;
    }

    svg.icon {
      /* layout */
      display: inline-block;
      width: var(--s-20);
      height: var(--s-20);
      margin: var(--s-2) calc(var(--s-2) * -1);
      overflow: visible;
      /* visual */
      fill: currentColor;

      :has(span) > & {
        margin: var(--s-2) 0;
      }
    }
  }

  /* * TYPOGRAPHY */

  @layer typography {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      max-width: var(--ll);
      /* text */
      font-weight: var(--fw-h);
      letter-spacing: var(--ls-h);
      text-wrap: var(--tw-h);
      word-wrap: break-word;
    }

    h1 {
      /* text */
      font-size: var(--fs-h1);
      line-height: var(--lh-h1);
      margin-bottom: var(--s-16);
    }

    h2 {
      /* text */
      font-size: var(--fs-h2);
      line-height: var(--lh-h2);
      margin-bottom: var(--s-16);
    }

    h3 {
      /* text */
      font-size: var(--fs-h3);
      line-height: var(--lh-h3);
    }

    h4 {
      /* text */
      font-size: var(--fs-h4);
      line-height: var(--lh-h4);
    }

    p {
      /* layout */
      max-width: var(--ll);
      /* text */
      text-wrap: var(--tw-p);
      /* misc */
    }

    strong {
      /* text */
      font-weight: var(--fw-h);
    }

    em {
      /* text */
      font-style: italic;
    }

    mark {
      /* visual */
      background-color: var(--c-area-warning);
      color: var(--c-text-warning);
      /* text */
      padding: var(--s-1) var(--s-4);
      white-space: break-spaces;
      border-radius: var(--br-subtle);
    }

    small {
      /* text */
      font-size: var(--fs-l);
    }
  }

  /* * TEXT BLOCKS */

  @layer text-blocks {
    blockquote {
      /* layout */
      display: flex;
      flex-flow: column nowrap;
      gap: var(--s-16);
      padding: var(--s-16);
      max-width: var(--ll);
      /* visual */
      border-left: var(--bw-normal) var(--bs-normal) var(--c-border-neutral);

      & cite {
        /* visual */
        color: var(--c-label-neutral);
        /* text */
        font-size: var(--fs-l);
        font-style: italic;
      }
    }

    aside {
      /* layout */
      display: flex;
      flex-flow: column nowrap;
      gap: var(--s-16);
      margin: var(--s-8) 0;
      padding: var(--s-16);
      max-width: var(--ll);
      /* visual */
      border-radius: var(--br-normal);
      background-color: var(--c-area-neutral-active);
      color: var(--c-text-neutral);

      &.error {
        background-color: var(--c-area-error-active);
        border: var(--bw-normal) var(--bs-subtle) var(--c-border-error);
        color: var(--c-text-error);
      }

      &.warning {
        background-color: var(--c-area-warning-active);
        border: var(--bw-normal) var(--bs-normal) var(--c-border-warning);
        color: var(--c-text-warning);
      }

      &.info {
        background-color: var(--c-area-info-active);
        border: var(--bw-normal) var(--bs-normal) var(--c-border-info);
        color: var(--c-text-info);
      }

      &.success {
        background-color: var(--c-area-success-active);
        border: var(--bw-normal) var(--bs-normal) var(--c-border-success);
        color: var(--c-text-success);
      }
    }
  }

  /* * TRUE LISTS */

  @layer true-lists {
    section > ul,
    section > ol,
    blockquote > ul,
    blockquote > ol,
    aside > ul,
    aside > ol {
      /* layout */
      margin-left: var(--s-16);
      display: flex;
      flex-flow: column nowrap;
      gap: var(--s-4);
      /* text */
      line-height: var(--lh-h4);
    }

    section > ul,
    section > ol {
      margin: var(--s-8) 0 var(--s-8) var(--s-16);
    }

    section > ul,
    blockquote > ul,
    aside > ul {
      list-style-type: disc;
    }

    section > ol,
    blockquote > ol {
      list-style-type: decimal;
    }
  }

  /* * TRUE LINKS */

  @layer true-links {
    a:not(.button, .tile) {
      /* visual */
      color: var(--c-text-tone);
      text-decoration: underline;
      white-space: break-spaces;
      border-radius: var(--br-subtle);
      /* misc */
      transition: color var(--dur-0_1) ease-in-out;
      cursor: pointer;

      &:hover,
      &:focus,
      &:active {
        color: var(--c-label-tone);
      }

      &:focus-visible {
        text-decoration: none;
      }

      &:active {
        text-decoration-style: dotted;
      }
    }
  }
}

/*
===
MOLECULES
===
*/

@layer molecules {
  /* * ALL INTERACTIVE */

  @layer interactive {
    button,
    .button,
    .tile {
      /* layout */
      display: flex;
      min-width: var(--s-48);
      min-height: var(--s-48);
      /* visual */
      background-color: var(--c-area-neutral);
      background-size: cover;
      background-position: center;
      border-radius: var(--br-normal);
      box-shadow: var(--sh-coords-rest) var(--c-shadow-neutral);
      color: var(--c-label-neutral);
      /* misc */
      transition: background-color var(--dur-0_1) ease-in-out,
        box-shadow var(--dur-0_1) ease-in-out,
        transform var(--dur-0_1) ease-in-out;
      cursor: pointer;

      &.accent {
        background-color: var(--c-area-accent);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-accent);
        color: var(--c-label-accent);
      }
      &.tone {
        background-color: var(--c-area-tone);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-tone);
        color: var(--c-label-tone);
      }
      &.error {
        background-color: var(--c-area-error);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-error);
        color: var(--c-label-error);
      }
      &.warning {
        background-color: var(--c-area-warning);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-warning);
        color: var(--c-label-warning);
      }
      &.info {
        background-color: var(--c-area-info);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-info);
        color: var(--c-label-info);
      }
      &.success {
        background-color: var(--c-area-success);
        box-shadow: var(--sh-coords-rest) var(--c-shadow-success);
        color: var(--c-label-success);
      }

      &:hover,
      &:focus {
        background-color: var(--c-area-neutral-hover);
        box-shadow: var(--sh-coords-hover) var(--c-shadow-neutral);
        transform: var(--transform-hover);

        &.accent {
          background-color: var(--c-area-accent-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-accent);
        }
        &.tone {
          background-color: var(--c-area-tone-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-tone);
        }
        &.error {
          background-color: var(--c-area-error-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-error);
        }
        &.warning {
          background-color: var(--c-area-warning-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-warning);
        }
        &.info {
          background-color: var(--c-area-info-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-info);
        }
        &.success {
          background-color: var(--c-area-success-hover);
          box-shadow: var(--sh-coords-hover) var(--c-shadow-success);
        }
      }

      &:active {
        background-color: var(--c-area-neutral-active);
        box-shadow: var(--sh-coords-active) var(--c-shadow-neutral);
        transform: var(--transform-active);

        &.accent {
          background-color: var(--c-area-accent-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-accent);
        }
        &.tone {
          background-color: var(--c-area-tone-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-tone);
        }
        &.error {
          background-color: var(--c-area-error-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-error);
        }
        &.warning {
          background-color: var(--c-area-warning-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-warning);
        }
        &.info {
          background-color: var(--c-area-info-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-info);
        }
        &.success {
          background-color: var(--c-area-success-active);
          box-shadow: var(--sh-coords-active) var(--c-shadow-success);
        }
      }
    }
  }

  /* * BUTTONS */

  @layer buttons {
    button,
    .button {
      flex-flow: row nowrap;
      align-items: center;
      justify-content: space-between;
      max-width: max-content;
      gap: var(--s-8);
      padding: var(--s-12) var(--s-16);
      /* text */
      font-size: var(--fs-l);
      font-weight: var(--fw-l);
      line-height: var(--lh-l);
      letter-spacing: var(--ls-l);

      & span {
        margin: var(--s-4) 0;
      }
      &.accent {
        font-weight: var(--fw-h);
      }
    }

    .button span::before {
      margin-right: var(--s-8);
    }

    .button span::after {
      margin-left: var(--s-8);
    }
  }
}

/*
===
COMPONENTS
===
*/

@layer components {
  /* * NAVIGATION */

  @layer navigation {
    nav {
      /* layout */
      display: flex;
      flex-flow: row wrap;
      gap: var(--s-8);
      justify-content: stretch;

      footer & {
        width: 100%;

        & a.button {
          flex: 1;
          max-width: none;

          & span {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;

            &.short {
              display: none;
            }

            @media (max-width: 30em) {
              &.long {
                display: none;
              }
              &.short {
                display: inline-block;
              }
            }
          }

          &:nth-child(2) {
            width: max-content;
            flex: 0 0 auto;
          }
        }
      }
    }
  }

  /* * TOC */

  @layer toc {
    .toc {
      & ul {
        list-style-type: none;
        margin-left: 0;

        & .button {
          max-width: var(--ll);
          font-size: var(--fs-p);
          font-weight: var(--fw-h);
          line-height: var(--lh-h2);
          color: var(--c-text-neutral);

          & small {
            font-weight: var(--fw-p);
            color: var(--c-label-neutral);
          }
        }
      }

      & section + section {
        margin-top: var(--s-24);
      }
    }

    #toc-main {
      display: grid;
      grid-template-columns: repeat(
        auto-fill,
        minmax(min(var(--s-256), 100%), 1fr)
      );
      grid-auto-rows: 1fr;
      gap: var(--s-16);

      & a {
        display: flex;
        justify-content: center;
        align-items: center;
        aspect-ratio: 1;
        padding: var(--s-48);
        font-size: var(--s-128);
        font-weight: var(--fw-h);
        line-height: var(--lh-l);
        letter-spacing: var(--ls-h);
        color: var(--c-text-neutral);

        &.a1 {
          background-image: url(./a1/a1.png);
        }
        &.a2 {
          background-image: url(./a2/a2.png);
        }
        &.b1 {
          background-image: url(./b1/b1.png);
        }
        &.b2 {
          background-image: url(./b2/b2.png);
        }
      }
    }
  }

  /* * FLASHCARDS */

  @layer flashcards {
    .flashcards-wrapper {
      display: flex;
      flex-flow: column nowrap;
      gap: var(--s-24);
      margin-top: var(--s-16);

      & .controls {
        display: flex;
        flex-flow: row nowrap;
        gap: var(--s-8);
        align-items: center;

        & .toggle-hide {
          display: none;

          .toggled & {
            display: inline-block;
          }
        }

        & .toggle-show {
          display: inline-block;

          .toggled & {
            display: none;
          }
        }
      }

      .flashcards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(min(25rem, 100%), 1fr));
        grid-auto-rows: 1fr;
        gap: var(--s-16);

        & .flashcard {
          display: flex;
          flex-flow: row nowrap;
          gap: var(--s-16-32);
          min-height: var(--s-64-128);
          padding: var(--s-16-32);
          align-items: start;
          max-width: 30rem;

          & img {
            width: clamp(var(--s-64), 30%, var(--s-128));
            aspect-ratio: 1;
            flex: 0 0 auto;
          }

          & dl {
            flex: 1;
            display: flex;
            height: 100%;
            flex-flow: column nowrap;
            gap: var(--s-4);
            justify-content: center;
            text-wrap: var(--tw-p);

            & dt {
              font-weight: var(--fw-h);
              line-height: var(--lh-h4);
            }

            & dd {
              overflow: hidden;
              line-height: var(--lh-h3);
              transition: opacity var(--dur-0_2) ease-in-out,
                max-height var(--dur-0_2) ease-in-out;
            }
          }
        }
      }
    }
  }
}

/*
===
UTILITIES
===
*/

@layer utilities {
  /* * CREDITS */

  @layer credits {
    .credits {
      align-self: center;
      line-height: var(--lh-l);
    }
  }

  /* * SKIP (hidden but focusable) */

  @layer skip {
    .skip {
      /* position */
      position: absolute;
      left: -9999px;
      overflow: hidden;
      /* layout */
      width: 1px;
      height: 1px;
      /* misc */
    }

    .button.skip:focus {
      /* position */
      position: static;
      overflow: auto;
      /* layout */
      width: auto;
      height: auto;
      /* misc */
    }
  }

  /* * TOGGLE THEME */

  @layer toggle-theme {
    #toggle-light {
      [data-theme="light"] & {
        display: none;
      }
    }

    #toggle-dark {
      [data-theme="dark"] & {
        display: none;
      }
    }
  }

  @layer draggable {
    .draggable {
      /* misc */
      cursor: grab;
    }

    .draggable:active {
      /* misc */
      cursor: grabbing;
    }
  }

  /* * DISABLED */

  @layer disabled {
    .disabled {
      /* visual */
      background-color: var(--c-area-disabled);
      border: var(--bw-subtle) var(--bs-normal) var(--c-border-disabled);
      box-shadow: none;
      color: var(--c-text-disabled);
      filter: grayscale(100%);
      /* misc */
      pointer-events: none;
    }
  }
}

/*
===
MARKERS
===
*/

@layer markers {
  ::marker {
    color: var(--c-label-neutral);
  }
  .error ::marker {
    color: var(--c-label-error);
  }
  .warning ::marker {
    color: var(--c-label-warning);
  }
  .info ::marker {
    color: var(--c-label-info);
  }
  .success ::marker {
    color: var(--c-label-success);
  }
}

/*
===
MEDIA: REDUCED MOTION
===
*/

@layer motion {
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }

    :root {
      /* mute transitions */
      --dur-0_1: 0s;
      --dur-0_2: 0s;
      --dur-0_3: 0s;
      --dur-0_4: 0s;
      --dur-0_5: 0s;
      --dur-0_6: 0s;
      --dur-0_7: 0s;
      --dur-0_8: 0s;
      --dur-0_9: 0s;
      --dur-1_0: 0s;
    }

    html {
      scroll-behavior: auto;
    }
  }
}

/*
===
MEDIA: PRINT
===
*/

@layer print {
  /* ! Unfinished */
  @media print {
    html {
      color-scheme: light;
    }
  }
}
